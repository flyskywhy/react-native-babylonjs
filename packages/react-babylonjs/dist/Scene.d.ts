import { PointerEventTypes, PointerInfo } from '@babylonjs/core/Events/pointerEvents.js';
import { AbstractMesh } from '@babylonjs/core/Meshes/abstractMesh.js';
import '@babylonjs/core/Physics/physicsEngineComponent.js';
import { Scene as BabylonScene, SceneOptions } from '@babylonjs/core/scene.js';
import React from 'react';
export declare type SceneEventArgs = {
    scene: BabylonScene;
    canvas: HTMLCanvasElement;
};
declare const _default: React.FunctionComponent<{
    onMeshPicked?: ((mesh: AbstractMesh, scene: BabylonScene) => void) | undefined;
    onScenePointerDown?: ((evt: PointerInfo, scene: BabylonScene) => void) | undefined;
    onScenePointerUp?: ((evt: PointerInfo, scene: BabylonScene) => void) | undefined;
    onScenePointerMove?: ((evt: PointerInfo, scene: BabylonScene) => void) | undefined;
    onSceneMount?: ((sceneEventArgs: SceneEventArgs) => void) | undefined;
    children: React.ReactNode;
    sceneOptions?: SceneOptions | undefined;
    actionManager?: import("@babylonjs/core/Actions/abstractActionManager").AbstractActionManager | undefined;
    activeCamera?: import("@babylonjs/core/Cameras/camera").Camera | undefined;
    activeCameras?: import("@babylonjs/core/Cameras/camera").Camera[] | undefined;
    addActionManager?: any;
    addAnimation?: any;
    addAnimationGroup?: any;
    addCamera?: any;
    addExternalData?: any;
    addGeometry?: any;
    addLight?: any;
    addMaterial?: any;
    addMesh?: any;
    addMorphTargetManager?: any;
    addMultiMaterial?: any;
    addParticleSystem?: any;
    addSkeleton?: any;
    addTexture?: any;
    addTransformNode?: any;
    afterCameraRender?: (() => void) | undefined;
    afterRender?: (() => void) | undefined;
    ambientColor?: import("@babylonjs/core/Maths/math.color").Color3 | undefined;
    animationPropertiesOverride?: import("@babylonjs/core/Animations/animationPropertiesOverride").AnimationPropertiesOverride | undefined;
    animationsEnabled?: boolean | undefined;
    animationTimeScale?: number | undefined;
    autoClear?: boolean | undefined;
    autoClearDepthAndStencil?: boolean | undefined;
    beforeCameraRender?: (() => void) | undefined;
    beforeRender?: (() => void) | undefined;
    blockfreeActiveMeshesAndRenderingGroups?: boolean | undefined;
    blockMaterialDirtyMechanism?: boolean | undefined;
    cameraToUseForPointers?: import("@babylonjs/core/Cameras/camera").Camera | undefined;
    clearColor?: import("@babylonjs/core/Maths/math.color").Color4 | undefined;
    clipPlane?: import("@babylonjs/core/Maths/math.plane").Plane | undefined;
    clipPlane2?: import("@babylonjs/core/Maths/math.plane").Plane | undefined;
    clipPlane3?: import("@babylonjs/core/Maths/math.plane").Plane | undefined;
    clipPlane4?: import("@babylonjs/core/Maths/math.plane").Plane | undefined;
    clipPlane5?: import("@babylonjs/core/Maths/math.plane").Plane | undefined;
    clipPlane6?: import("@babylonjs/core/Maths/math.plane").Plane | undefined;
    collisionsEnabled?: boolean | undefined;
    constantlyUpdateMeshUnderPointer?: boolean | undefined;
    customLODSelector?: ((mesh: AbstractMesh, camera: import("@babylonjs/core/Cameras/camera").Camera) => AbstractMesh) | undefined;
    customRenderTargets?: import("@babylonjs/core/Materials/Textures/renderTargetTexture").RenderTargetTexture[] | undefined;
    defaultCursor?: string | undefined;
    defaultMaterial?: import("@babylonjs/core/Materials/material").Material | undefined;
    deleteCompoundImpostor?: any;
    disableOfflineSupportExceptionRules?: RegExp[] | undefined;
    dispatchAllSubMeshesOfActiveMeshes?: boolean | undefined;
    doNotHandleCursors?: boolean | undefined;
    DoubleClickDelay?: number | undefined;
    DragMovementThreshold?: number | undefined;
    dumpNextRenderTargets?: boolean | undefined;
    enablePhysics?: any;
    environmentBRDFTexture?: import("@babylonjs/core/Materials/Textures/baseTexture").BaseTexture | undefined;
    environmentIntensity?: number | undefined;
    environmentTexture?: import("@babylonjs/core/Materials/Textures/baseTexture").BaseTexture | undefined;
    ExclusiveDoubleClickMode?: boolean | undefined;
    fogColor?: import("@babylonjs/core/Maths/math.color").Color3 | undefined;
    fogDensity?: number | undefined;
    fogEnabled?: boolean | undefined;
    fogEnd?: number | undefined;
    fogMode?: number | undefined;
    fogStart?: number | undefined;
    forcePointsCloud?: boolean | undefined;
    forceWireframe?: boolean | undefined;
    getActiveMeshCandidates?: (() => import("@babylonjs/core/Misc/smartArray").ISmartArrayLike<AbstractMesh>) | undefined;
    getActiveSubMeshCandidates?: ((mesh: AbstractMesh) => import("@babylonjs/core/Misc/smartArray").ISmartArrayLike<import("@babylonjs/core/Meshes/subMesh").SubMesh>) | undefined;
    getCollidingSubMeshCandidates?: ((mesh: AbstractMesh, collider: import("@babylonjs/core/Collisions/collider").Collider) => import("@babylonjs/core/Misc/smartArray").ISmartArrayLike<import("@babylonjs/core/Meshes/subMesh").SubMesh>) | undefined;
    getDeterministicFrameTime?: (() => number) | undefined;
    getIntersectingSubMeshCandidates?: ((mesh: AbstractMesh, localRay: import("@babylonjs/core/Culling/ray").Ray) => import("@babylonjs/core/Misc/smartArray").ISmartArrayLike<import("@babylonjs/core/Meshes/subMesh").SubMesh>) | undefined;
    gravity?: import("@babylonjs/core/Maths/math.vector").Vector3 | undefined;
    'gravity-x'?: number | undefined;
    'gravity-y'?: number | undefined;
    'gravity-z'?: number | undefined;
    hoverCursor?: string | undefined;
    importedMeshesFiles?: String[] | undefined;
    lensFlaresEnabled?: boolean | undefined;
    lightsEnabled?: boolean | undefined;
    loadingPluginName?: string | undefined;
    LongPressDelay?: number | undefined;
    metadata?: any;
    needsPreviousWorldMatrices?: boolean | undefined;
    offlineProvider?: import("@babylonjs/core/Offline/IOfflineProvider").IOfflineProvider | undefined;
    onActiveCameraChanged?: any;
    onAfterActiveMeshesEvaluationObservable?: any;
    onAfterAnimationsObservable?: any;
    onAfterCameraRenderObservable?: any;
    onAfterDrawPhaseObservable?: any;
    onAfterParticlesRenderingObservable?: any;
    onAfterPhysicsObservable?: any;
    onAfterRenderCameraObservable?: any;
    onAfterRenderingGroupObservable?: any;
    onAfterRenderObservable?: any;
    onAfterRenderTargetsRenderObservable?: any;
    onAfterStepObservable?: any;
    onAnimationFileImportedObservable?: any;
    onBeforeActiveMeshesEvaluationObservable?: any;
    onBeforeAnimationsObservable?: any;
    onBeforeCameraRenderObservable?: any;
    onBeforeDrawPhaseObservable?: any;
    onBeforeParticlesRenderingObservable?: any;
    onBeforePhysicsObservable?: any;
    onBeforeRenderingGroupObservable?: any;
    onBeforeRenderObservable?: any;
    onBeforeRenderTargetsRenderObservable?: any;
    onBeforeStepObservable?: any;
    onCameraRemovedObservable?: any;
    onComputePressureChanged?: any;
    onDataLoadedObservable?: any;
    onDispose?: (() => void) | undefined;
    onDisposeObservable?: any;
    onGeometryRemovedObservable?: any;
    onKeyboardObservable?: any;
    onLightRemovedObservable?: any;
    onMaterialRemovedObservable?: any;
    onMeshImportedObservable?: any;
    onMeshRemovedObservable?: any;
    onMultiMaterialRemovedObservable?: any;
    onNewCameraAddedObservable?: any;
    onNewGeometryAddedObservable?: any;
    onNewLightAddedObservable?: any;
    onNewMaterialAddedObservable?: any;
    onNewMeshAddedObservable?: any;
    onNewMultiMaterialAddedObservable?: any;
    onNewSkeletonAddedObservable?: any;
    onNewTextureAddedObservable?: any;
    onNewTransformNodeAddedObservable?: any;
    onPointerDown?: ((evt: import("@babylonjs/core/Events/deviceInputEvents").IPointerEvent, pickInfo: import("@babylonjs/core/Collisions/pickingInfo").PickingInfo, type: PointerEventTypes) => void) | undefined;
    onPointerMove?: ((evt: import("@babylonjs/core/Events/deviceInputEvents").IPointerEvent, pickInfo: import("@babylonjs/core/Collisions/pickingInfo").PickingInfo, type: PointerEventTypes) => void) | undefined;
    onPointerObservable?: any;
    onPointerPick?: ((evt: import("@babylonjs/core/Events/deviceInputEvents").IPointerEvent, pickInfo: import("@babylonjs/core/Collisions/pickingInfo").PickingInfo) => void) | undefined;
    onPointerUp?: ((evt: import("@babylonjs/core/Events/deviceInputEvents").IPointerEvent, pickInfo: import("@babylonjs/core/Collisions/pickingInfo").PickingInfo, type: PointerEventTypes) => void) | undefined;
    onPreKeyboardObservable?: any;
    onPrePointerObservable?: any;
    onReadyObservable?: any;
    onSkeletonRemovedObservable?: any;
    onTextureRemovedObservable?: any;
    onTransformNodeRemovedObservable?: any;
    particlesEnabled?: boolean | undefined;
    physicsEnabled?: boolean | undefined;
    pointerDownPredicate?: ((Mesh: AbstractMesh) => boolean) | undefined;
    pointerMovePredicate?: ((Mesh: AbstractMesh) => boolean) | undefined;
    pointerMoveTrianglePredicate?: ((p0: import("@babylonjs/core/Maths/math.vector").Vector3, p1: import("@babylonjs/core/Maths/math.vector").Vector3, p2: import("@babylonjs/core/Maths/math.vector").Vector3, ray: import("@babylonjs/core/Culling/ray").Ray) => boolean) | undefined;
    pointerUpPredicate?: ((Mesh: AbstractMesh) => boolean) | undefined;
    pointerX?: number | undefined;
    pointerY?: number | undefined;
    postProcessesEnabled?: boolean | undefined;
    postProcessManager?: import("@babylonjs/core/PostProcesses/postProcessManager").PostProcessManager | undefined;
    preventDefaultOnPointerDown?: boolean | undefined;
    preventDefaultOnPointerUp?: boolean | undefined;
    probesEnabled?: boolean | undefined;
    proceduralTexturesEnabled?: boolean | undefined;
    renderTargetsEnabled?: boolean | undefined;
    requireLightSorting?: boolean | undefined;
    reservedDataStore?: any;
    setActiveCameraById?: any;
    setActiveCameraByName?: any;
    setPointerOverMesh?: any;
    setRenderingAutoClearDepthStencil?: any;
    setRenderingOrder?: any;
    setSceneUniformBuffer?: any;
    setStepId?: any;
    setTransformMatrix?: any;
    shadowsEnabled?: boolean | undefined;
    skeletonsEnabled?: boolean | undefined;
    skipFrustumClipping?: boolean | undefined;
    skipPointerMovePicking?: boolean | undefined;
    spritesEnabled?: boolean | undefined;
    texturesEnabled?: boolean | undefined;
    useConstantAnimationDeltaTime?: boolean | undefined;
    useDelayedTextureLoading?: boolean | undefined;
    useRightHandedSystem?: boolean | undefined;
    assignTo?: string | string[] | undefined;
    assignFrom?: string | undefined;
    fromInstance?: any;
    disposeInstanceOnUnmount?: boolean | undefined;
}>;
export default _default;
